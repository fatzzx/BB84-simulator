---
description: 
globs: 
alwaysApply: true
---
# Regras de Estilização com Tailwind CSS

## Configuração e Instalação

Para adicionar o Tailwind CSS ao projeto, execute os seguintes comandos:

```bash
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
```

## Estrutura de Arquivos

- `tailwind.config.js` - Configuração principal do Tailwind
- `postcss.config.js` - Configuração do PostCSS
- `src/styles/tailwind.css` - Arquivo base do Tailwind

## Convenções de Estilização

### 1. Organização de Classes

Siga esta ordem para organizar classes Tailwind:

1. Layout (container, flex, grid)
2. Posicionamento (position, top, right, bottom, left)
3. Box Model (margin, padding, border)
4. Visual (background, color, opacity)
5. Tipografia (font, text)
6. Interatividade (hover, focus, active)
7. Responsividade (sm:, md:, lg:, xl:)
8. Animações (transition, transform)

Exemplo:
```jsx
<div className="
  container mx-auto p-4
  relative top-0
  m-4 p-6 border rounded-lg
  bg-gray-900 text-white
  text-lg font-medium
  hover:bg-gray-800
  transition-colors duration-300
  md:p-8 lg:p-10
">
```

### 2. Componentes Quânticos

Use classes específicas para elementos quânticos:

```jsx
// Qubit
<div className="
  w-16 h-16 rounded-full
  bg-gradient-to-br from-blue-500 to-purple-600
  shadow-lg shadow-blue-500/30
  flex items-center justify-center
  text-white font-bold
  transition-all duration-300
  hover:scale-110
">

// Base de Medição
<div className="
  px-4 py-2 rounded-md
  bg-gray-800 border border-gray-700
  text-sm font-mono
  flex items-center gap-2
">

// Estado Quântico
<div className="
  p-4 rounded-lg
  bg-gray-900/50 backdrop-blur-sm
  border border-gray-700/50
  text-blue-400 font-mono
">
```

### 3. Temas Quânticos

Utilize estas cores para manter consistência:

```jsx
// Cores Principais
const colors = {
  primary: 'from-blue-500 to-cyan-400',    // Estados computacionais
  secondary: 'from-purple-500 to-pink-500', // Base Hadamard
  accent: 'from-green-400 to-emerald-500',  // Estados de superposição
  background: 'bg-gray-900',               // Fundo principal
  surface: 'bg-gray-800',                  // Superfícies
  text: 'text-gray-100',                   // Texto principal
  textSecondary: 'text-gray-400',          // Texto secundário
}
```

### 4. Responsividade

Use breakpoints consistentes:

```jsx
// Mobile First
<div className="
  w-full p-4
  sm:w-3/4 sm:p-6
  md:w-2/3 md:p-8
  lg:w-1/2 lg:p-10
">
```

### 5. Animações

Para animações quânticas:

```jsx
// Transição de Estado
<div className="
  transition-all duration-500 ease-in-out
  hover:scale-105
  active:scale-95
">

// Pulsação Quântica
<div className="
  animate-pulse
  bg-gradient-to-r from-blue-500 to-purple-600
">
```

### 6. Dark Mode

Configure o dark mode no `tailwind.config.js`:

```js
module.exports = {
  darkMode: 'class',
  // ...
}
```

Use classes dark: para estilos específicos:

```jsx
<div className="
  bg-white dark:bg-gray-900
  text-gray-900 dark:text-white
">
```

### 7. Customização

Adicione estes valores ao `tailwind.config.js`:

```js
module.exports = {
  theme: {
    extend: {
      colors: {
        quantum: {
          blue: '#00d4ff',
          purple: '#9d4edd',
          green: '#00ff88',
        },
      },
      animation: {
        'quantum-pulse': 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',
      },
    },
  },
}
```

### 8. Performance

- Evite classes dinâmicas quando possível
- Use `@apply` para componentes reutilizáveis
- Mantenha classes em uma única linha para melhor legibilidade
- Utilize variáveis CSS para valores repetidos

### 9. Acessibilidade

```jsx
// Foco Visível
<button className="
  focus:outline-none
  focus:ring-2 focus:ring-blue-500
  focus:ring-offset-2 focus:ring-offset-gray-900
">

// Contraste
<div className="
  text-gray-900 dark:text-white
  bg-white dark:bg-gray-900
">
```

### 10. Exemplos de Componentes

#### Botão Quântico
```jsx
<button className="
  px-6 py-3 rounded-lg
  bg-gradient-to-r from-blue-500 to-purple-600
  text-white font-medium
  shadow-lg shadow-blue-500/30
  hover:shadow-xl hover:shadow-blue-500/40
  active:scale-95
  transition-all duration-300
  focus:outline-none focus:ring-2 focus:ring-blue-500
">
  Iniciar Simulação
</button>
```

#### Card de Estado Quântico
```jsx
<div className="
  p-6 rounded-xl
  bg-gray-800/50 backdrop-blur-sm
  border border-gray-700/50
  shadow-lg shadow-blue-500/10
  hover:shadow-xl hover:shadow-blue-500/20
  transition-all duration-300
">
  <h3 className="text-xl font-bold text-blue-400 mb-2">
    Estado Quântico
  </h3>
  <p className="text-gray-300">
    |0⟩ = |+⟩ + |-⟩
  </p>
</div>
```

#### Container de Simulação
```jsx
<div className="
  w-full max-w-4xl mx-auto
  p-6 rounded-2xl
  bg-gray-900/80 backdrop-blur-md
  border border-gray-700/50
  shadow-2xl shadow-blue-500/10
  grid grid-cols-1 md:grid-cols-2 gap-6
">
  {/* Conteúdo */}
</div>
```
